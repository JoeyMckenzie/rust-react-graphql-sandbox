/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const BreweriesIndexLazyImport = createFileRoute('/breweries/')()
const BeersIndexLazyImport = createFileRoute('/beers/')()
const BreweriesNewLazyImport = createFileRoute('/breweries/new')()
const BeersNewLazyImport = createFileRoute('/beers/new')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const BreweriesIndexLazyRoute = BreweriesIndexLazyImport.update({
  path: '/breweries/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/breweries/index.lazy').then((d) => d.Route),
)

const BeersIndexLazyRoute = BeersIndexLazyImport.update({
  path: '/beers/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/beers/index.lazy').then((d) => d.Route))

const BreweriesNewLazyRoute = BreweriesNewLazyImport.update({
  path: '/breweries/new',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/breweries/new.lazy').then((d) => d.Route))

const BeersNewLazyRoute = BeersNewLazyImport.update({
  path: '/beers/new',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/beers/new.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/beers/new': {
      id: '/beers/new'
      path: '/beers/new'
      fullPath: '/beers/new'
      preLoaderRoute: typeof BeersNewLazyImport
      parentRoute: typeof rootRoute
    }
    '/breweries/new': {
      id: '/breweries/new'
      path: '/breweries/new'
      fullPath: '/breweries/new'
      preLoaderRoute: typeof BreweriesNewLazyImport
      parentRoute: typeof rootRoute
    }
    '/beers/': {
      id: '/beers/'
      path: '/beers'
      fullPath: '/beers'
      preLoaderRoute: typeof BeersIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/breweries/': {
      id: '/breweries/'
      path: '/breweries'
      fullPath: '/breweries'
      preLoaderRoute: typeof BreweriesIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  BeersNewLazyRoute,
  BreweriesNewLazyRoute,
  BeersIndexLazyRoute,
  BreweriesIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/beers/new",
        "/breweries/new",
        "/beers/",
        "/breweries/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/beers/new": {
      "filePath": "beers/new.lazy.tsx"
    },
    "/breweries/new": {
      "filePath": "breweries/new.lazy.tsx"
    },
    "/beers/": {
      "filePath": "beers/index.lazy.tsx"
    },
    "/breweries/": {
      "filePath": "breweries/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
